BootStrap: docker
From: nvidia/cuda:10.2-devel-ubuntu18.04

%environment
  export LC_ALL=en_US.UTF-8
  export LANG=en_US.UTF-8
  export LANGUAGE=en_US.UTF-8

  export WORKON_HOME=/venvs
  export VIRTUALENVWRAPPER_PYTHON='/usr/bin/python3'

%post
  # install packages needed for the configuration
  apt-get update
  apt-get install -y locales git python3 python3-pip
  apt-get upgrade -y

  echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen
  locale-gen en_US.utf8
  /usr/sbin/update-locale LANG=en_US.UTF-8

  export LC_ALL=en_US.UTF-8
  export LANG=en_US.UTF-8
  export LANGUAGE=en_US.UTF-8

  touch /etc/localtime
  touch /usr/bin/nvidia-smi
  touch /usr/bin/nvidia-debugdump
  touch /usr/bin/nvidia-persistenced
  touch /usr/bin/nvidia-cuda-mps-control
  touch /usr/bin/nvidia-cuda-mps-server
  mkdir -p /run/nvidia-persistenced
  touch /run/nvidia-persistenced/socket

  pip3 install virtualenvwrapper
  mkdir /venvs
  chmod 777 /venvs

  apt install -y clang-9 libc++-9-dev libc++abi-9-dev cmake ninja-build
  apt install -y libz-dev libpng-dev libjpeg-dev libxrandr-dev libxinerama-dev libxcursor-dev
  apt install -y python3-dev python3-distutils python3-setuptools
  apt install -y gcc-8 g++-8
  update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 700 --slave /usr/bin/g++ g++ /usr/bin/g++-7
  update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 800 --slave /usr/bin/g++ g++ /usr/bin/g++-8

  export CC=clang-9
  export CXX=clang++-9

  # actual mitsuba setup
  git clone --recursive https://github.com/mitsuba-renderer/mitsuba2

  cd mitsuba2
  mkdir build
  cd build
  cmake -GNinja ..
  ninja

%runscript
  source /usr/local/bin/virtualenvwrapper.sh
  source /mitsuba2/setpath.sh
